{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","errorMsg","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kOAyBeA,EAtBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,oBCULC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCHK,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,mBAAoBC,OAAQ,SAAtE,SACGJ,EAAMK,YCqBEC,E,kDAtBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,EACVC,SAAU,IAJC,E,qDAQnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAW,CAAEL,UAAU,EAAMC,SAAUC,M,oBAGhD,WAEI,OAAIE,KAAKL,MAAMC,SACJ,kEAAqCI,KAAKL,MAAME,SAAhD,UAEAG,KAAKZ,MAAMK,a,GAnBHS,aC6CZC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEpB,YAAawB,EAAMC,OAAOC,SAb1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACRG,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClB2B,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAO5C,WAAU,IAAD,EACyBZ,KAAKL,MAA7BjB,EADD,EACCA,OAAQG,EADT,EACSA,YACVgC,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAMC,KAAKC,cAAcC,SAASrC,EAAYoC,kBAEvD,OAAQvC,EAAOyC,OAGX,sBAAKpC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAckB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WAP1B,6C,GAzBYX,c,MCAlBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f828f5f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) { \r\n    throw new Error(\"Oh my, Oh my!!!\");\r\n  }\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}        \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '3px dashed black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component { \r\n    \r\n    constructor(props) { \r\n        super(props);\r\n        this.state = { \r\n            hasError: false,\r\n            errorMsg: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info) { \r\n        this.setState ( { hasError: true, errorMsg: error} )\r\n    }\r\n\r\n    render () {\r\n\r\n        if (this.state.hasError) { \r\n            return <h1>Oh no, call me. Error occured \"[{this.state.errorMsg}\\] </h1>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\n//import registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons'; \r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}